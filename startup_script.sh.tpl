#!/bin/bash

# Copyright 2019 Google LLC.
# This software is provided as-is, without warranty or representation for any use
# or purpose. Your use of it is subject to your agreements with Google.

set -e
set -x

log() { echo "`date`: $1"; }

export SPLUNK_USER=splunk
export SPLUNK_BIN=/opt/splunk/bin/splunk
export SPLUNK_HOME=/opt/splunk
export SPLUNK_ROLE="$(curl http://metadata.google.internal/computeMetadata/v1/instance/attributes/splunk-role -H "Metadata-Flavor: Google")"
export LOCAL_IP="$(curl http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/ip -H "Metadata-Flavor: Google")"

# Download & install Splunk Enterprise
if [ ! -d "$SPLUNK_HOME" ]; then 
  wget -O ${SPLUNK_PACKAGE_NAME} "${SPLUNK_PACKAGE_URL}"
  tar xvfz ${SPLUNK_PACKAGE_NAME}
  mv splunk $SPLUNK_HOME
  rm ${SPLUNK_PACKAGE_NAME}
fi

# Create Splunk system user, and set directory permissions
if ! id $SPLUNK_USER >/dev/null 2>&1; then
  useradd -r -m -s /bin/bash -U $SPLUNK_USER
fi
chown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME

# Set Splunk admin password and disable first-time run password prompt
cat >>$SPLUNK_HOME/etc/system/local/user-seed.conf <<end
[user_info]
USERNAME = admin
PASSWORD = ${SPLUNK_ADMIN_PASSWORD}
end
touch $SPLUNK_HOME/etc/.ui_login

# Configure systemd to start Splunk at boot
cd /opt/splunk
bin/splunk enable boot-start -user $SPLUNK_USER --accept-license

# Update systemd unit file to ensure graceful shutdown
sed -ie '/^ExecStart=/a KillMode=mixed\nKillSignal=SIGINT\nTimeoutStopSec=10min' /etc/systemd/system/Splunkd.service
sudo systemctl daemon-reload

# Configure Splunk before starting service
# Increase splunkweb connection timeout with splunkd
mkdir -p $SPLUNK_HOME/etc/apps/base-autogenerated/local
cat >>$SPLUNK_HOME/etc/apps/base-autogenerated/local/web.conf <<end
[settings]
splunkdConnectionTimeout = 300
end

chown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/apps/base-autogenerated

# Start Splunk service
sudo systemctl start Splunkd

# Allow for Splunk start-up time
sleep 10

if [ $SPLUNK_ROLE = "IDX-Master" ]; then

# Forward to indexer cluster using indexer discovery
cat >>$SPLUNK_HOME/etc/apps/base-autogenerated/local/outputs.conf <<end
# Turn off indexing
[indexAndForward]
index = false

[tcpout]
defaultGroup = indexer_cluster_peers
forwardedindex.filter.disable = true
indexAndForward = false

[tcpout:indexer_cluster_peers]
indexerDiscovery = cluster_master

[indexer_discovery:cluster_master]
pass4SymmKey = ${SPLUNK_INDEXER_DISCOVERY_SECRET}
master_uri = https://127.0.0.1:8089
end

chown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/apps/base-autogenerated

sudo -u $SPLUNK_USER $SPLUNK_BIN login -auth admin:${SPLUNK_ADMIN_PASSWORD}
sudo -u $SPLUNK_USER $SPLUNK_BIN edit cluster-config -mode master -replication_factor 3 -search_factor 2 -secret ${SPLUNK_CLUSTER_SECRET} -cluster_label Splunk-IDX

# Configure indexer discovery
cat >>$SPLUNK_HOME/etc/system/local/server.conf <<end

[indexer_discovery]
pass4SymmKey = ${SPLUNK_INDEXER_DISCOVERY_SECRET}
indexerWeightByDiskCapacity = true
end

chown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/system/local/server.conf

# Add base configs for peer nodes as an app under master-apps
# Peer config 1: Enable HEC input
sudo -u $SPLUNK_USER $SPLUNK_BIN http-event-collector enable -uri https://localhost:8089
sudo -u $SPLUNK_USER $SPLUNK_BIN http-event-collector create default-token -uri https://localhost:8089 > /tmp/token
TOKEN=`sed -n 's/\\ttoken=//p' /tmp/token`
rm /tmp/token
log "Setting HEC Token as guest attribute"
curl -X PUT --data "$TOKEN" http://metadata.google.internal/computeMetadata/v1/instance/guest-attributes/splunk/token -H "Metadata-Flavor: Google"

mkdir -p $SPLUNK_HOME/etc/master-apps/peer-base-autogenerated/local
mv $SPLUNK_HOME/etc/apps/splunk_httpinput/local/inputs.conf $SPLUNK_HOME/etc/master-apps/peer-base-autogenerated/local
# Peer config 2: Enable splunktcp input
cat >>$SPLUNK_HOME/etc/master-apps/peer-base-autogenerated/local/inputs.conf <<end

[splunktcp://9997]
disabled=0
end

chown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/master-apps

else
# Link up with License Master
# TODO: Add following when enterprise license installed on cluster master
#sudo -u $SPLUNK_USER $SPLUNK_BIN edit licenser-localslave -master_uri https://${SPLUNK_CM_PRIVATE_IP}:8089 -auth admin:${SPLUNK_ADMIN_PASSWORD}
log "Skip license master link up" 
fi

if [ $SPLUNK_ROLE = "SHC-Deployer" ]; then

# Configure some SHC parameters
cat >>$SPLUNK_HOME/etc/apps/base-autogenerated/local/server.conf <<end

[shclustering]
pass4SymmKey = ${SPLUNK_CLUSTER_SECRET}
shcluster_label = SplunkSHC
end

# Forward to indexer cluster using indexer discovery
cat >>$SPLUNK_HOME/etc/apps/base-autogenerated/local/outputs.conf <<end
# Turn off indexing on the search head
[indexAndForward]
index = false

[tcpout]
defaultGroup = indexer_cluster_peers
forwardedindex.filter.disable = true
indexAndForward = false

[tcpout:indexer_cluster_peers]
indexerDiscovery = cluster_master

[indexer_discovery:cluster_master]
pass4SymmKey = ${SPLUNK_INDEXER_DISCOVERY_SECRET}
master_uri = https://${SPLUNK_CM_PRIVATE_IP}:8089
end

chown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/apps/base-autogenerated

# Add base config for search head cluster members
mkdir -p $SPLUNK_HOME/etc/shcluster/apps/member-base-autogenerated/local
cat >>$SPLUNK_HOME/etc/shcluster/apps/member-base-autogenerated/local/outputs.conf <<end
# Turn off indexing on the search head
[indexAndForward]
index = false

[tcpout]
defaultGroup = indexer_cluster_peers
forwardedindex.filter.disable = true
indexAndForward = false

[tcpout:indexer_cluster_peers]
indexerDiscovery = cluster_master

[indexer_discovery:cluster_master]
pass4SymmKey = ${SPLUNK_INDEXER_DISCOVERY_SECRET}
master_uri = https://${SPLUNK_CM_PRIVATE_IP}:8089
end

sudo -u $SPLUNK_USER $SPLUNK_BIN apply shcluster-bundle -action stage --answer-yes

elif [ $SPLUNK_ROLE = "SHC-Member" ]; then
  # Configure some SHC parameters
  cat >>$SPLUNK_HOME/etc/system/local/server.conf <<end
[shclustering]
register_replication_address = $LOCAL_IP
end
  chown -R $SPLUNK_USER:$SPLUNK_USER $SPLUNK_HOME/etc/system/local

  sudo -u $SPLUNK_USER $SPLUNK_BIN login -auth admin:${SPLUNK_ADMIN_PASSWORD}
  sudo -u $SPLUNK_USER $SPLUNK_BIN init shcluster-config -mgmt_uri https://$LOCAL_IP:8089 -replication_port 8090 -replication_factor 2 -conf_deploy_fetch_url https://${SPLUNK_DEPLOYER_PRIVATE_IP}:8089 -shcluster_label Splunk-SHC -secret ${SPLUNK_CLUSTER_SECRET}

  sudo -u $SPLUNK_USER $SPLUNK_BIN edit cluster-config -mode searchhead -master_uri https://${SPLUNK_CM_PRIVATE_IP}:8089 -secret ${SPLUNK_CLUSTER_SECRET}

elif [ $SPLUNK_ROLE = "IDX-Peer" ]; then

sudo -u $SPLUNK_USER $SPLUNK_BIN login -auth admin:${SPLUNK_ADMIN_PASSWORD}
sudo -u $SPLUNK_USER $SPLUNK_BIN edit cluster-config -mode slave -master_uri https://${SPLUNK_CM_PRIVATE_IP}:8089 -replication_port 9887 -secret ${SPLUNK_CLUSTER_SECRET}

fi

# Start Splunk service
sudo systemctl restart Splunkd

log "Finished note setup on $HOSTNAME with role $SPLUNK_ROLE"

exit 0
